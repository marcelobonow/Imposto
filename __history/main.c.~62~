#include <main.h>
#include <Motor1.c>
#include <lcd_kit.c>
//#include <linhas.c>


#define  ch1    pin_a4

#define  echo1    pin_b6
#define  trig1    pin_b7

#define  echo2    pin_b5
#define  trig2    pin_b4

#define  echo3    pin_b2
#define  trig3    pin_b3

float le_distancia1(){

   float tempo_medido=0;
   float tempo_media=0;
   int x;
   
   for(x=0;x<3;x++)
   {
   output_bit(trig1,1);
   delay_us(10);
   output_bit(trig1,0);

   while(input(echo1)==0);
   
   setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);//FREQ 20MHz/32
   set_timer1(0);
   
   while(input(echo1)==1);
   
   setup_timer_1(T1_DISABLED);
   tempo_media=tempo_media+get_timer1();
   }
   tempo_medido=tempo_media/3;
   return ((tempo_medido*5)/(8*58));
}

float le_distancia2(){

   float tempo_medido=0;
   float tempo_media=0;
   int x;
   
   for(x=0;x<3;x++)
   {
   output_bit(trig2,1);
   delay_us(10);
   output_bit(trig2,0);

   while(input(echo2)==0);
   
   setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);//FREQ 20MHz/32
   set_timer1(0);
   
   while(input(echo2)==1);
   
   setup_timer_1(T1_DISABLED);
   tempo_media=tempo_media+get_timer1();
   }
   tempo_medido=tempo_media/3;
   return ((tempo_medido*5)/(8*58));
}

float le_distancia3(){

   float tempo_medido=0;
   float tempo_media=0;
   int x;
   
   for(x=0;x<3;x++)
   {
   output_bit(trig3,1);
   delay_us(10);
   output_bit(trig3,0);

   while(input(echo3)==0);
   
   setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);//FREQ 20MHz/32
   set_timer1(0);
   
   while(input(echo3)==1);
   
   setup_timer_1(T1_DISABLED);
   tempo_media=tempo_media+get_timer1();
   }
   tempo_medido=tempo_media/3;
   return ((tempo_medido*5)/(8*58));
}

void main()
{
   lcd_ini();
   motor_ini();
   set_pwm(900); 
//   linhas_ini();

   float distancia1=0,distancia2=0,distancia3=0;
   
   do{
      distancia1=le_distancia1();
      distancia2=le_distancia2();
      distancia3=le_distancia3();
   
      printf(lcd_escreve,"\f%f  %f\n%f",distancia1,distancia2,distancia3);
      delay_ms(100);
   }while(input(ch1)==1);
   
   while(input(ch1)==0);

   do{
      distancia1=le_distancia1();
      distancia2=le_distancia2();
      distancia3=le_distancia3();

      if(distancia2>10 && distancia1>10 && distancia3>10)
      {
         frente();
      }
      //else para();
      if(distancia1<10 && distancia3>10)
      {
      //if(distancia2<10){tras();}
         gira_direita();
      }
      if(distancia3<10 && distancia1>10)
      {
      //if(distancia2<10){tras();}
         gira_esquerda();
      } //15 7
      //talvez passar le_distancia pra distancia denovo
      //provavelmente ocorrerá erro quando 1  menor q 10, e 3 menor q 10, podendo entrar em distancia 2 menor que 10 tbm => assim dantro tras depois de já ter girado[corretamente?]
      if(distancia2<15) //distancia1.....
      {
         //tras(); //manter tras por 100~250ms
         //delay_ms(100);
         if(distancia1 > distancia3){
            esquerda_frente();//gira_esquerda();
         }
         if(distancia3 > distancia1){
            diereita_frente();//gira_direita();
         }
      }
      if(distancia1<10 && distancia3<10){ // && distancia2>10
         para();
      }
   }
   while(1);//mantem o robô travado até ch1==0



}







